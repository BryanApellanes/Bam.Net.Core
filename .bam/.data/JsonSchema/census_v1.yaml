"$schema": http://json-schema.org/draft-04/schema#
id: census_v1.yaml

title: "CensusEntity"
type: object
javaType: "com.vimly.entitystore.schema.application.CensusEntity"
"@type": "Census"
extends: 
  "$ref": "entity_v1.yaml"
properties:
  employeeCount:
    type: integer
  memberCount:
    type: integer
  products:
    type: array
    items:
      "$ref": "#/definitions/ProductPartipation"
  employees: 
    type: array
    items:
      "$ref": "#/definitions/CensusEmployee"

definitions:
  ProductPartipation:
    type: object
    javaType: "com.vimly.entitystore.schema.application.ProductParticipationCount"
    properties:
      product:
        enum:
          - MEDICAL
          - DENTAL
          - VISION
      productCount:
        type: integer
      includedWaverReasonCount:
        type: integer
      totalEligibility: 
        type: integer
      participationPercentage:
        type: number

  CensusEmployee:
    type: object
    javaType: "com.vimly.entitystore.schema.application.CensusEmployeeEntity"
    extends:
      "$ref": "#/definitions/CensusMember"
    properties:
      employment:
        type: object
        properties:
          employerName:
              type: string
              description: "Name of the empployer, must match one of the entered company names"      
          companyId:
              type: string
              description: "UUID of the company the census member is part of.  This does not provide referential integrity"
              format: uuid
          dateOfHire:
              type: string
              format: "\\d{4}-\\d{2}-\\d{2}"
              example: "2001-03-13"
              description: "Date of birth for the member YYYY-MM-DD"
              existingJavaType: "java.time.LocalDate"
          hoursPerWeek:
              type: number
              minimum: 0
              maximum: 200
              multipleOf: 0.1
          occupation:
              type: string
              description: "Occupation of individual"
          employeeClassification:
              enum:
                - ACTIVE
                - PART_TIME
                - RETIREE
                - COBRA
          annualSalary:
              type: number
              minimum: 0
              multiple: 0.01
      dependents:
          type: array
          items:
              "$ref": "#/definitions/CensusMember"

 
  CensusMember:
    type: object
    javaType: "com.vimly.entitystore.schema.application.CensusMemberEntity"
    properties:
      externalIds:
        type: object
        existingJavaType: "java.util.Map<String, String>"
      familyId:
          type: string
          description: "Autogenerated family Id"
      memberId:
          type: string
          example: "FAM1-1"
          description: "Autogenerated member id based on family id"
      membershipType:
          type: string
          description: "Membership type"
          enum:
              - EE # Employee
              - SP # Spouse
              - CH # Child
              - DP # Domestic Partner
              - SC # Step Child
              - GC # Grand Child
              - OT # Other
      ssn:
        type: string
      firstName:
          type: string
          description: "First name of the member"
      middleName:
          type: string
          description: "Middle name of the member"
      lastName:
          type: string
          description: "Last name of the member"
      nameSuffix:
          type: string
          description: "Suffix of individuals name"
      address:
          type: object
          javaType: "com.vimly.entitystore.schema.application.CensusMemberAddress"
          properties:
            addressLine1:
              type: string
              faker: address.streetAddress
            addressLine2:
              type: string
              faker: address.streetAddress
            city:
              type: string
              faker: address.city
            region:
              type: string
              faker: address.county
            province:
              type: string
              faker: address.stateAbbr
            postalCode:
              type: string
              format: "\\d{5}|\\d{5}-\\d{4}"
              faker: address.zipCode
      dateOfBirth:
          type: string
          format: date
          example: "2001-03-13"
          description: "Date of birth for the member YYYY-MM-DD"
          existingJavaType: "java.time.LocalDate"
      gender:
          type: string
          description: "Gender of the member"
          enum:
              - MALE
              - FEMALE
              - OTHER
      maritalStatus:
          enum:
            - SINGLE
            - MARRIED
            - DIVORCED
            - WIDOWED
      communications:
          type: array
          items:
            "$ref": "communication_v1.yaml"

      # Member Eligibility Data
      smokingStatus:
          type: string
          description: "Smoking status for the member"
          enum:
              - Y
              - N
              - NA
      disabled:
          type: boolean
          default: false


      coverages:
          "$ref": "application_v1.yaml#/definitions/types/coverages"
          
      enrollMedical:
          type: boolean

      medicalWaiverReason:
          type: string
          description: "Waiver reason code"
          enum:
              - SPOUSE_PARTNER_COVERAGE
              - TRICARE_VA
              - INDIVIDUAL_COVERAGE
              - GROUP_COVERAGE_CONT
              - NO_OTHER
              - MEDICARE
              - MEDICAL_ASSISTANCE
              - GENERAL_ASSISTANCE_MEDICAL_CARE
              - TRICARE
              - OTHER_PARENT_GROUP_MEDICAL_COVERAGE
              - OTHER
              - NOT_AVAILABLE

      enrollDental:
          type: boolean

      dentalWaiverReason:
          type: string
          description: "Dental waiver reason code"
          enum:
              - OTHER
              - NO_OTHER
              - NOT_AVAILABLE

      enrollVision:
          type: boolean

      visionWaiverReason:
          type: string
          description: "Vision waiver reason code"
          enum:
              - OTHER
              - NO_OTHER
              - NOT_AVAILABLE
 
